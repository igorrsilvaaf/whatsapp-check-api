const express = require('express');const { makeWASocket, useMultiFileAuthState, Browsers } = require('@whiskeysockets/baileys');const P = require('pino');const dotenv = require('dotenv');const qrcode = require('qrcode-terminal');dotenv.config();const app = express();const PORT = process.env.PORT || 3000;app.use(express.json());let sock;// Inicializar WhatsApp Socketasync function initializeWhatsApp() {  const { state, saveCreds } = await useMultiFileAuthState(process.env.SESSION_PATH || './auth_info.json');  const sock = makeWASocket({    auth: state,    logger: P({ level: 'info' }),    browser: Browsers.appropriate('Ubuntu'),    keepAliveIntervalMs: 15000,  });  sock.ev.on('creds.update', saveCreds);  sock.ev.on('connection.update', (update) => {    const { connection, lastDisconnect, qr } = update;    if (qr) {      console.log('ðŸ“± Escaneie o QR Code abaixo para conectar ao WhatsApp:');      qrcode.generate(qr, { small: true });    }    if (connection === 'close') {      console.error('ConexÃ£o encerrada:', lastDisconnect?.error);      setTimeout(initializeWhatsApp, 5000); // Reconectar apÃ³s 5 segundos    } else if (connection === 'open') {      console.log('âœ… ConexÃ£o com WhatsApp estabelecida!');    }  });}// Rota para verificar nÃºmero no WhatsAppapp.post('/check-whatsapp', async (req, res) => {  const { phoneNumber } = req.body;  if (!phoneNumber) {    return res.status(400).json({ error: 'NÃºmero de telefone Ã© obrigatÃ³rio.' });  }  try {    const [result] = await sock.onWhatsApp(phoneNumber);    if (result && result.exists) {      res.json({        phoneNumber,        existsOnWhatsApp: true,        waId: result.jid,      });    } else {      res.json({        phoneNumber,        existsOnWhatsApp: false,      });    }  } catch (error) {    console.error('Erro ao verificar nÃºmero:', error);    res.status(500).json({ error: 'Erro ao verificar nÃºmero no WhatsApp.' });  }});// Iniciar servidorapp.listen(PORT, async () => {  console.log(`ðŸš€ Servidor rodando na porta ${PORT}`);  await initializeWhatsApp();});